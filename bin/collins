#!/usr/bin/env ruby
require 'collins-cli'

ALLOWED_ACTIONS = {
  Collins::CLI::Find      => ['query','find'],
  Collins::CLI::Modify    => ['modify','set'],
  Collins::CLI::Log       => ['log'],
  Collins::CLI::Provision => ['provision'],
  Collins::CLI::Power     => ['power'],
  Collins::CLI::IPAM      => ['ipam','address','ipaddress'],
  Collins::CLI::State     => ['state','status'],
  Collins::CLI::DC        => ['dc','datacenter'],
}

HELP_MESSAGE = "Usage: #{File.basename(File.realpath($0))} <command> [options]
Available commands:
  dc, datacenter:            Manage multiple Collins configurations
  query, find:               Search for assets in Collins
  modify, set:               Add and remove attributes, change statuses, and log to assets
  log:                       Display log messages on assets
  provision:                 Provision assets
  power:                     Control and show power status
  state, status:             Show and manage states and statuses via State API
  ipam, address, ipaddress:  Allocate and delete IPs, show IP pools"

abort HELP_MESSAGE if ARGV.empty?
action = ARGV.shift
targets = ALLOWED_ACTIONS.select {|k,v| v.any? {|handle| ! %r|^#{action}|.match(handle).nil? } }
target,_ = targets.first
if ['-h','--help'].include? action
  puts HELP_MESSAGE
  exit 0
elsif targets.empty? or target.nil?
  abort ["Unknown action #{action}!","",HELP_MESSAGE].join("\n")
elsif targets.length > 1
  abort ["Action #{action} was ambiguous! Please be more specific (i.e. type the whole action out)","",HELP_MESSAGE].join("\n")
end

begin
  exit target.new.parse!.validate!.run!
rescue => e
  abort e.message
  #raise e
end
